#TITLE	CK Metrics
#SUMMARY	Measurements for an interpretation of the metrics from the CK metrics suite

##Dataset attributes
Timestamp	Sun May 16 20:38:33 NZST 2021
Tool	mete-analysis(ck metrics):20180206T1230
System	a3-modular-kalah-OverCry
Codebase	submissions/a3-modular-kalah-OverCry/a3-modular-kalah-OverCry

##Measurements
#Metadata
CKCBO (Coupling)	UnboundedCount	(trgtdcl) Only record dependencies to target modules whose declarations have been seen; (srcsttc) Record dependencies with respect to both instance and static fields and methods in the source module; (trgtsttic) Record dependencies to both instance and static fields and methods in the target module; (srccons) Consider constructors as invokers as creating coupling; (trgtcons) Record both invoking methods and calling construtors as creating dependencies; (type) Record dependencies between all types, including interfaces, enums, an annotations; (anc) Include dependencies to ancestors of source; (desc) Include descendants to ancestors of source; (inh) Include dependencies on targets whose accessed members were inherited; (poly) Include dependencies on targets whose members were accessed via polymorphism; (bidir) Dependencies are recorded as bi-directional. If A has a dependency to B, then B has a dependency to A; (fanout) Record only dependencies from source to target (no-op when bidir); (mod) Record dependencies between modules (as opposed to between packages); (pres) Record only the presence (or not) of an occurrence of a dependency between entities; (nest) Consider nested or enclosing types are separate; (raw) Do not record dependencies due to synthetic constructs
WMC (Size)	UnboundedCount	(srcsttc) Record dependencies with respect to both instance and static fields and methods in the source module; (srccons) Consider constructors as invokers as creating coupling; (init) Record all dependencies including those in all initialisers; (raw) Do not record dependencies due to synthetic constructs; (srcmem) Include dependencies to members of all visibilities in source
NOC (Inheritance)	UnboundedCount	(srcsttc) Record dependencies with respect to both instance and static fields and methods in the source module; (srccons) Consider constructors as invokers as creating coupling; (init) Record all dependencies including those in all initialisers; (raw) Do not record dependencies due to synthetic constructs; (srcmem) Include dependencies to members of all visibilities in source
DIT (Inheritance)	UnboundedCount	(srcsttc) Record dependencies with respect to both instance and static fields and methods in the source module; (srccons) Consider constructors as invokers as creating coupling; (init) Record all dependencies including those in all initialisers; (raw) Do not record dependencies due to synthetic constructs; (srcmem) Include dependencies to members of all visibilities in source
LCOM2 (Cohesion)	UnboundedCount	(srcsttc) Record dependencies with respect to both instance and static fields and methods in the source module; (srcmeth) Do not consider constructors as invokers as creating coupling; (init) Record all dependencies including those in all initialisers; (srcmem) Include dependencies to members of all visibilities in source
RFC (Coupling)	UnboundedCount	(trgtall) Record dependencies to target modules whether or not the declarations have been seen; (srcsttc) Record dependencies with respect to both instance and static fields and methods in the source module; (trgtsttic) Record dependencies to both instance and static fields and methods in the target module; (trgtcons) Record both invoking methods and calling construtors as creating dependencies; (type) Record dependencies between all types, including interfaces, enums, an annotations
#Data
#Entity	CKCBO (Coupling)	WMC (Size)	NOC (Inheritance)	DIT (Inheritance)	LCOM2 (Cohesion)	RFC (Coupling)
kalah.Logic	6	7	0	1	0	45
kalah.House	2	1	0	2	0	2
kalah.Interface.ILogic	1	2	1	0	0	2
kalah.Interface.IHouse	2	2	1	0	0	2
kalah.Interface.IStore	3	4	1	0	0	4
kalah.Interface.ITeam	3	8	1	0	0	8
kalah.Kalah	2	3	0	1	0	7
kalah.Singleton.Printer	6	5	0	1	5	42
kalah.Storage	2	3	2	1	0	4
kalah.Store	4	3	0	2	1	5
kalah.Team	7	10	0	1	0	42
